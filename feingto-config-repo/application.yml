spring:
  cache:
    type: redis
  http:
    encoding:
      force: true
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 0
      max-file-size: 1024MB
      max-request-size: 10MB
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.jdbc.Driver
  jpa:
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: false
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    virtualHost: /
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
  security:
    user:
      password: ${CONFIG_SERVER_PASSWORD:123456}
  zipkin:
    base-url: http://${ZIPKIN_HOST:localhost}:9411/
    locator.discovery.enabled: true
    sender.type: RABBIT
    rabbitmq.queue: gateway-tracing

feign:
  httpclient.enabled: true
  client.config:
    default:
      connectTimeout: 10000
      readTimeout: 10000
      loggerLevel: basic
  hystrix.enabled: true

hystrix:
  command:
    default.execution:
      timeout.enabled: true
      isolation:
        strategy: SEMAPHORE
        thread.timeoutInMilliseconds: 60000
  share-security-context: true
  stream.dashboard.intervalInMilliseconds: 5000

management:
  endpoints.web:
    base-path: /mgmt
    cors:
      allow-credentials: true
      allowed-headers: '*'
      allowed-methods: '*'
      allowed-origins: '*'
      max-age: 1800s
    exposure:
      include: '*'
      exclude: 'env'
  endpoint:
    health.show-details: always
    shutdown.enabled: true
    jolokia.enabled: true

authserver:
  host: ${UAA_HOST:localhost}
  port: ${UAA_PORT:8800}
  context-path: /uaa

security:
  basic.enabled: false
  oauth2:
    sso.login-path: /login
    resource:
      load-balanced: true
      prefer-token-info: false
      user-info-uri: http://${authserver.host}:${authserver.port}${authserver.context-path}/user
      jwt:
        key-value: feingto-cloud-api
    client:
      access-token-uri: http://${authserver.host}:${authserver.port}${authserver.context-path}/oauth/token
      user-authorization-uri: http://${authserver.host}:${authserver.port}${authserver.context-path}/oauth/authorize

logging:
  file: /logs/feingopen/${spring.application.name}_${server.port}.log
